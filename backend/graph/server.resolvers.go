package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"context"

	"github.com/Evantopian/Nexus/graph/model"
	"github.com/Evantopian/Nexus/graph/resolver"
	"github.com/google/uuid"
)

// CreateServer is the resolver for the createServer field.
func (r *mutationResolver) CreateServer(ctx context.Context, gameID *uuid.UUID, name string, image *string, description *string) (*model.Server, error) {
	return resolver.CreateServer(ctx, gameID, name, image, description)
}

// JoinServer is the resolver for the joinServer field.
func (r *mutationResolver) JoinServer(ctx context.Context, serverID uuid.UUID) (bool, error) {
	return resolver.JoinServer(ctx, serverID)
}

// LeaveServer is the resolver for the leaveServer field.
func (r *mutationResolver) LeaveServer(ctx context.Context, serverID uuid.UUID) (bool, error) {
	return resolver.LeaveServer(ctx, serverID)
}

// DeleteServer is the resolver for the deleteServer field.
func (r *mutationResolver) DeleteServer(ctx context.Context, serverID uuid.UUID) (bool, error) {
	return resolver.DeleteServer(ctx, serverID)
}

// GetServers is the resolver for the getServers field.
func (r *queryResolver) GetServers(ctx context.Context, slug string) ([]*model.Server, error) {
	return resolver.GetServers(ctx, slug)
}
