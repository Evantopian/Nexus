package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"context"

	"github.com/Evantopian/Nexus/graph/model"
	"github.com/Evantopian/Nexus/graph/resolver"
	"github.com/google/uuid"
)

// InviteToParty is the resolver for the inviteToParty field.
func (r *mutationResolver) InviteToParty(ctx context.Context, partyID uuid.UUID, inviteeID uuid.UUID) (*model.PartyInvitation, error) {
	return resolver.InviteToParty(ctx, partyID, inviteeID)
}

// HandlePartyInvite is the resolver for the handlePartyInvite field.
func (r *mutationResolver) HandlePartyInvite(ctx context.Context, inviteID uuid.UUID, accept bool) (*model.Party, error) {
	return resolver.HandlePartyInvite(ctx, inviteID, accept)
}

// RemoveFromParty is the resolver for the removeFromParty field.
func (r *mutationResolver) RemoveFromParty(ctx context.Context, partyID uuid.UUID, userID uuid.UUID) (*model.Party, error) {
	return resolver.RemoveFromParty(ctx, partyID, userID)
}

// CreateParty is the resolver for the createParty field.
func (r *mutationResolver) CreateParty(ctx context.Context, name string) (*model.Party, error) {
	return resolver.CreateParty(ctx, name)
}

// DeleteParty is the resolver for the deleteParty field.
func (r *mutationResolver) DeleteParty(ctx context.Context, partyID uuid.UUID) (bool, error) {
	return resolver.DeleteParty(ctx, partyID)
}

// LeaveParty is the resolver for the leaveParty field.
func (r *mutationResolver) LeaveParty(ctx context.Context, partyID uuid.UUID) (*model.Party, error) {
	return resolver.LeaveParty(ctx, partyID)
}

// GetPartyInvitations is the resolver for the getPartyInvitations field.
func (r *queryResolver) GetPartyInvitations(ctx context.Context, userID uuid.UUID) ([]*model.PartyInvitation, error) {
	return resolver.GetPartyInvitations(ctx, userID)
}

// GetSentPartyInvitations is the resolver for the getSentPartyInvitations field.
func (r *queryResolver) GetSentPartyInvitations(ctx context.Context, userID uuid.UUID) ([]*model.PartyInvitation, error) {
	return resolver.GetSentPartyInvitations(ctx, userID)
}

// GetParty is the resolver for the getParty field.
func (r *queryResolver) GetParty(ctx context.Context, partyID uuid.UUID) (*model.Party, error) {
	return resolver.GetParty(ctx, partyID)
}
