package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"context"

	"github.com/Evantopian/Nexus/graph/model"
	"github.com/Evantopian/Nexus/graph/resolver"
	"github.com/google/uuid"
)

// SendFriendRequest is the resolver for the sendFriendRequest field.
func (r *mutationResolver) SendFriendRequest(ctx context.Context, receiverID uuid.UUID) (*model.FriendRequest, error) {
	return resolver.SendFriendRequest(ctx, receiverID)
}

// AcceptFriendRequest is the resolver for the acceptFriendRequest field.
func (r *mutationResolver) AcceptFriendRequest(ctx context.Context, senderID uuid.UUID) (bool, error) {
	return resolver.AcceptFriendRequest(ctx, senderID)
}

// RejectFriendRequest is the resolver for the rejectFriendRequest field.
func (r *mutationResolver) RejectFriendRequest(ctx context.Context, senderID uuid.UUID) (bool, error) {
	return resolver.RejectFriendRequest(ctx, senderID)
}

// RemoveFriend is the resolver for the removeFriend field.
func (r *mutationResolver) RemoveFriend(ctx context.Context, friendID uuid.UUID) (bool, error) {
	return resolver.RemoveFriend(ctx, friendID)
}

// GetFriends is the resolver for the getFriends field.
func (r *queryResolver) GetFriends(ctx context.Context) ([]*model.User, error) {
	return resolver.GetFriends(ctx)
}

// GetFriendRequests is the resolver for the getFriendRequests field.
func (r *queryResolver) GetFriendRequests(ctx context.Context) (*model.FriendRequestsList, error) {
	return resolver.GetFriendRequests(ctx)
}
